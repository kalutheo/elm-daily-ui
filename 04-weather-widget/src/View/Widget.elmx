{- http://codepen.io/EvanWieland/pen/PwOKLE -}
module View.Widget exposing (..)

import Html exposing (..)
import Html.Attributes exposing (..)
import Html.Events exposing (onClick)
import Model exposing (..)
import Msg exposing (..)
import View.Card as Card
import RemoteData exposing (..)
import Array
import Util.Weather exposing (weatherToType, kelvinToCelsius)

header: Model -> Html msg
header model =
  <header class="main-header">
    <h1>{=model.message}</h1>
  </header>

cardsList: Model -> Html Msg
cardsList model =
    case model.responseWeather of
      Success responseApiWeather ->
        let
          weatherMaybe = Array.fromList responseApiWeather.weather
            |> Array.get 0

          temperature =  responseApiWeather.main.temp |> kelvinToCelsius |> round
          card = case weatherMaybe of
            Nothing -> text ""
            Just weather ->  Card.view (weatherToType weather) temperature weather.description
        in
        <ul class="grid-container">
          {card}
        </ul>
      _ ->
        <ul class="grid-container"></ul>


geocodeButton : Model -> Html Msg
geocodeButton model =
    let
      classNames = "button is-primary request-weather-btn"
    in
    case model.responseWeather of
      Loading -> <button class={classNames}>Loading ...</button>
      _ -> <button class={classNames} onClick={RequestWeather}>Please tell me now !</button>



widget: Model -> Html Msg
widget model =
  <div>
    {header model}
    <div class="columns">
      <div class="column">
        {geocodeButton model}
      </div>
    </div>
    {cardsList model}
  </div>
